// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package github

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestEvent) DeepCopyInto(out *PullRequestEvent) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		if *in == nil {
			*out = nil
		} else {
			*out = new(string)
			**out = **in
		}
	}
	if in.Number != nil {
		in, out := &in.Number, &out.Number
		if *in == nil {
			*out = nil
		} else {
			*out = new(int)
			**out = **in
		}
	}
	if in.PullRequest != nil {
		in, out := &in.PullRequest, &out.PullRequest
		if *in == nil {
			*out = nil
		} else {
			*out = new(PullRequest)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Changes != nil {
		in, out := &in.Changes, &out.Changes
		if *in == nil {
			*out = nil
		} else {
			*out = new(EditChange)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.RequestedReviewer != nil {
		in, out := &in.RequestedReviewer, &out.RequestedReviewer
		if *in == nil {
			*out = nil
		} else {
			*out = new(User)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		if *in == nil {
			*out = nil
		} else {
			*out = new(Repository)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Sender != nil {
		in, out := &in.Sender, &out.Sender
		if *in == nil {
			*out = nil
		} else {
			*out = new(User)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Installation != nil {
		in, out := &in.Installation, &out.Installation
		if *in == nil {
			*out = nil
		} else {
			*out = new(Installation)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		if *in == nil {
			*out = nil
		} else {
			*out = new(Label)
			(*in).DeepCopyInto(*out)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestEvent.
func (in *PullRequestEvent) DeepCopy() *PullRequestEvent {
	if in == nil {
		return nil
	}
	out := new(PullRequestEvent)
	in.DeepCopyInto(out)
	return out
}
